name: 'CI Pipeline'

on:
  push:
    branches:
      - dev         # Déclenche la pipeline quand on push sur dev
  pull_request:
    branches:
      - dev         # Déclenche aussi sur les PR vers dev

jobs:
  backend-tests:
    runs-on: ubuntu-latest   # Utilise une VM Ubuntu

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: TaskManagerDB
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
        ports:
          - 5432:5432
        options: >            # Options pour vérifier que le conteneur PostgreSQL est prêt
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies with Poetry
        working-directory: server
        run: poetry install

      - name: Run Django tests
        working-directory: server
        env:
          POSTGRES_DB: TaskManagerDB       # match avec la config du conteneur
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
          DB_HOST: localhost
        run: |
          poetry run python manage.py migrate
          poetry run python manage.py test

  frontend-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        working-directory: client
        run: npm install

      - name: Run lint and tests
        working-directory: client
        run: |
          npm run lint || true
          npm test -- --watchAll=false

  docker-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Docker Compose Build Check
        run: docker-compose -f docker-compose.yml build
